syntax = "proto3";

package blueapi.awscost.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/awscost";
option java_package = "cloud.alphaus.api.awscost";
option java_outer_classname = "Costs";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Alphaus Blue: AWSCost Service";
    version: "1.0";
    contact: {
      name: "Alphaus Blue: AWSCost Service";
      url: "https://alphauslabs.github.io/blueapi/apis/awscost.html";
    };
    license: {
      name: "License: Apache License 2.0";
      url: "https://github.com/alphauslabs/blueapi/blob/main/LICENSE";
    };
  };
  external_docs: {
    url: "https://alphauslabs.github.io/blueapi/apis/awscost.html";
    description: "More about Alphaus Blue: AWSCost Service";
  }
};

// Service for reading aggregated costs for your AWS costs and usages.
service AwsCost {
  // Streams back the usage-based cost details of an AWS account. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadAccountCosts (StreamReadAccountCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/accounts/{name}/costs:streamReadAccountCosts"
      body: "*"
    };
  }

  // Streams back the usage-based cost details of a company. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadCompanyCosts (StreamReadCompanyCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/companies/{name}/costs:streamReadCompanyCosts"
      body: "*"
    };
  }

  // Streams back the usage-based cost details of a billing group. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadBillingGroupCosts (StreamReadBillingGroupCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/billinggroups/{name}/costs:streamReadBillingGroupCosts"
      body: "*"
    };
  }

  // Streams back the usage-based cost details of an MSP (Ripple) or company (Wave). If
  // datetime range parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadCosts (StreamReadCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/costs:streamReadCosts"
      body: "*"
    };
  }

  // Streams back the fee-based details of an AWS account. This API covers non-usage-based
  // fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadAccountFees (StreamReadAccountFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/accounts/{name}/fees:streamReadAccountFees"
      body: "*"
    };
  }

  // Streams back the fee-based details of a company. This API covers non-usage-based
  // fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadCompanyFees (StreamReadCompanyFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/companies/{name}/fees:streamReadCompanyFees"
      body: "*"
    };
  }

  // Streams back the fee-based details of a billing group. This API covers non-usage-based
  // fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadBillingGroupFees (StreamReadBillingGroupFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/billinggroups/{name}/fees:streamReadBillingGroupFees"
      body: "*"
    };
  }

  // Streams back the fee-based details of an MSP (Ripple) or company (Wave). This API covers
  // non-usage-based fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If
  // datetime range parameters are not set, month-to-date (current month) will be returned.
  rpc StreamReadFees (StreamReadFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/fees:streamReadFees"
      body: "*"
    };
  }
}

// Response message for AwsCost.StreamReadAccountCosts.
message Cost {
  string account = 1;
  string company_id = 2;
  string billing_group_id = 3;
  google.protobuf.Timestamp date = 4;
  string product_code = 5;
  string service_code = 6;
  string region = 7;
  string zone = 8;
  string usage_type = 9;
  string instance_type = 10;
  string operation = 11;
  string invoice_id = 12;
  string description = 13;
  double usage_amount = 14;
  double cost = 15;
}

// Request message for AwsCost.StreamReadAccountCosts.
message StreamReadAccountCostsRequest {
  // Required. The AWS account to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.StreamReadCompanyCosts.
message StreamReadCompanyCostsRequest {
  // Required. The company id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.StreamReadBillingGroupCosts.
message StreamReadBillingGroupCostsRequest {
  // Required. The billing group id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.StreamReadCosts.
message StreamReadCostsRequest {
  // Optional. The MSP id or company id to stream. If not provided, the parent MSP or
  // company will be used.
  string name = 1;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Response message for AwsCost.StreamReadAccountFees.
message Fee {
  string account = 1;
  string company_id = 2;
  string billing_group_id = 3;
  google.protobuf.Timestamp date = 4;
  string type = 5;
  string product_code = 6;
  string description = 7;
  double cost = 8;
}

// Request message for AwsCost.StreamReadAccountFees.
message StreamReadAccountFeesRequest {
  // Required. The AWS account id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.StreamReadCompanyFees.
message StreamReadCompanyFeesRequest {
  // Required. The company id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.StreamReadBillingGroupFees.
message StreamReadBillingGroupFeesRequest {
  // Required. The billing group id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.StreamReadFees.
message StreamReadFeesRequest {
  // Optional. The MSP id or company id to stream. If not provided, the parent MSP or
  // company will be used.
  string name = 1;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}
syntax = "proto3";

package blueapi.awscost.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/awscost";
option java_package = "cloud.alphaus.api.awscost";
option java_outer_classname = "AwsCostsProto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Alphaus Blue: AWSCost Service";
    version: "1.0";
    contact: {
      name: "Alphaus Blue: AWSCost Service";
      url: "https://alphauslabs.github.io/blueapi/apis/awscost.html";
    };
    license: {
      name: "License: Apache License 2.0";
      url: "https://github.com/alphauslabs/blueapi/blob/main/LICENSE";
    };
  };
  external_docs: {
    url: "https://alphauslabs.github.io/blueapi/apis/awscost.html";
    description: "More about Alphaus Blue: AWSCost Service";
  }
};

// Service for reading aggregated costs for your AWS costs and usages.
service AwsCost {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
		description: "Base URL: https://api.alphaus.cloud/m/blue/awscost"
		external_docs: {
			url: "https://alphauslabs.github.io/blueapi/";
			description: "Find out more about AwsCost service";
		}
	};

  // Reads the usage-based cost details of an AWS account. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc ReadAccountCosts (ReadAccountCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/accounts/{name}/costs:readAccountCosts"
      body: "*"
    };
  }

  // Reads the usage-based cost details of a company. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc ReadCompanyCosts (ReadCompanyCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/companies/{name}/costs:readCompanyCosts"
      body: "*"
    };
  }

  // Reads the usage-based cost details of a billing group. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc ReadBillingGroupCosts (ReadBillingGroupCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/billinggroups/{name}/costs:readBillingGroupCosts"
      body: "*"
    };
  }

  // Reads the usage-based cost details of an organization (Ripple) or company (Wave).
  // If datetime range parameters are not set, month-to-date (current month) will be returned.
  rpc ReadCosts (ReadCostsRequest) returns (stream Cost) {
    option (google.api.http) = {
      post: "/v1/costs:readCosts"
      body: "*"
    };
  }

  // Reads the non-usaged-based details of an AWS account. This API covers non-usage-based
  // fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc ReadAccountFees (ReadAccountFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/accounts/{name}/fees:readAccountFees"
      body: "*"
    };
  }

  // Reads the non-usage-based details of a company. This API covers non-usage-based
  // fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc ReadCompanyFees (ReadCompanyFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/companies/{name}/fees:readCompanyFees"
      body: "*"
    };
  }

  // Reads the non-usage-based details of a billing group. This API covers non-usage-based
  // fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime range
  // parameters are not set, month-to-date (current month) will be returned.
  rpc ReadBillingGroupFees (ReadBillingGroupFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/billinggroups/{name}/fees:readBillingGroupFees"
      body: "*"
    };
  }

  // Reads the non-usage-based details of an organization (Ripple) or company (Wave). This API covers
  // non-usage-based fees, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. If datetime
  // range parameters are not set, month-to-date (current month) will be returned.
  rpc ReadFees (ReadFeesRequest) returns (stream Fee) {
    option (google.api.http) = {
      post: "/v1/fees:readFees"
      body: "*"
    };
  }
}

// Response message for AwsCost.StreamReadAccountCosts.
message Cost {
  string account = 1;
  string company_id = 2;
  string billing_group_id = 3;
  google.protobuf.Timestamp date = 4;
  string product_code = 5;
  string service_code = 6;
  string region = 7;
  string zone = 8;
  string usage_type = 9;
  string instance_type = 10;
  string operation = 11;
  string invoice_id = 12;
  string description = 13;
  map<string, string> tags = 14;
  map<string, string> cost_categories = 15;
  double usage_amount = 16;
  double cost = 17;
}

// Request message for AwsCost.ReadAccountCosts.
message ReadAccountCostsRequest {
  // Required. The AWS account to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;

  // Optional. If set to true, stream will include resource tags. Note that this could
  // potentially increase the data size if you have lots of tag information.
  bool include_tags = 4;

  // Optional. If set to true, stream will include resource cost category information.
  // Note that this could potentially increase the data size if you have lots of cost
  // category information.
  bool include_cost_categories = 5;
}

// Request message for AwsCost.ReadCompanyCosts.
message ReadCompanyCostsRequest {
  // Required. The company id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;

  // Optional. If set to true, stream will include resource tags. Note that this could
  // potentially increase the data size if you have lots of tag information.
  bool include_tags = 4;

  // Optional. If set to true, stream will include resource cost category information.
  // Note that this could potentially increase the data size if you have lots of cost
  // category information.
  bool include_cost_categories = 5;
}

// Request message for AwsCost.ReadBillingGroupCosts.
message ReadBillingGroupCostsRequest {
  // Required. The billing group id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;

  // Optional. If set to true, stream will include resource tags. Note that this could
  // potentially increase the data size if you have lots of tag information.
  bool include_tags = 4;

  // Optional. If set to true, stream will include resource cost category information.
  // Note that this could potentially increase the data size if you have lots of cost
  // category information.
  bool include_cost_categories = 5;
}

// Request message for AwsCost.ReadCosts.
message ReadCostsRequest {
  // Optional. The MSP id or company id to stream. If not provided, the parent MSP or
  // company will be used.
  string name = 1;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;

  // Optional. If set to true, stream will include resource tags. Note that this could
  // potentially increase the data size if you have lots of tag information.
  bool include_tags = 4;

  // Optional. If set to true, stream will include resource cost category information.
  // Note that this could potentially increase the data size if you have lots of cost
  // category information.
  bool include_cost_categories = 5;
}

// Response message for AwsCost.ReadAccountFees.
message Fee {
  string account = 1;
  string company_id = 2;
  string billing_group_id = 3;
  google.protobuf.Timestamp date = 4;
  string type = 5;
  string product_code = 6;
  string description = 7;
  double cost = 8;
}

// Request message for AwsCost.ReadAccountFees.
message ReadAccountFeesRequest {
  // Required. The AWS account id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.ReadCompanyFees.
message ReadCompanyFeesRequest {
  // Required. The company id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.ReadBillingGroupFees.
message ReadBillingGroupFeesRequest {
  // Required. The billing group id to stream.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}

// Request message for AwsCost.ReadFees.
message ReadFeesRequest {
  // Optional. The MSP id or company id to stream. If not provided, the parent MSP or
  // company will be used.
  string name = 1;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used.
  google.protobuf.Timestamp start_time = 2;

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  google.protobuf.Timestamp end_time = 3;
}
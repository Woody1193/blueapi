syntax = "proto3";

package blueapi.admin.v1;

import "api/accountgroup.proto";
import "api/account.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/admin";
option java_package = "cloud.alphaus.api.admin";
option java_outer_classname = "AdminProto";

// Admin service definition.
service Admin {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) Admin API. Base URL: https://api.alphaus.cloud/m/blue"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/admin/";
      description: "Service definition";
    }
  };

  // Lists all account groups.
  rpc ListAccountGroups(ListAccountGroupsRequest) returns (stream ListAccountGroupsResponse) {
    option (google.api.http) = {
      get: "/admin/v1/acctgroups"
    };
  }

  // Get all accounts under specified Accout Group Id
  rpc GetAccountsByAcctGroupId(GetAccountsByAcctGroupIdRequest) returns (stream GetAccountsByAcctGroupIdResponse) {
    option (google.api.http) = {
      get: "/admin/v1/acctgroup/{id}"
    };
  }
}

// Request message for the Admin.ListAccountGroups rpc.
message ListAccountGroupsRequest {}

// Response message for the Admin.ListAccountGroups rpc.
message ListAccountGroupsResponse {
  repeated api.AccountGroup accountGroups = 1;
}

// Request message for the Admin.GetAccountsByAcctGroupId rpc.
message GetAccountsByAcctGroupIdRequest {
  string id = 1;
}

message GetAccountsByAcctGroupIdResponse {
  repeated api.Account accounts = 1;
}


syntax = "proto3";

package blueapi.waveglobalconfig.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/waveglobalconfig";
option java_package = "cloud.alphaus.api.waveglobalconfig";
option java_outer_classname = "WaveGlobalConfigProto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Alphaus Blue: WaveGlobalConfig service";
    version: "1.0";
    contact: {
      name: "Alphaus Blue: WaveGlobalConfig service";
      url: "https://alphauslabs.github.io/blueapi/apis/waveglobalconfig.html";
    };
    license: {
      name: "License: Apache License 2.0";
      url: "https://github.com/alphauslabs/blueapi/blob/main/LICENSE";
    };
  };
  external_docs: {
    url: "https://alphauslabs.github.io/blueapi/apis/waveglobalconfig.html";
    description: "More about Alphaus Blue: WaveGlobalConfig service";
  }
};

// WaveGlobalConfig service.
service WaveGlobalConfig {
  rpc Config (ConfigRequest) returns (ListConfigResponse) {
    option (google.api.http) = {
      get: "/v1/config"
    };
  }
}

// Response message for Config.
message Config {
  // The feature name of wave.
  string feature_id = 1;

  // Required. The feature id of wave.
  string feature_name = 2;

  // The feature of wave enabled or disabled.
  // Set value to enable or disable the use of the feature.
  bool enabled = 3;
}

// Request message for WaveGlobalConfig.Config.
message ConfigRequest {}

// Response message for WaveGlobalConfig.Config.
message ListConfigResponse {
  // A list of global configs
  repeated Config configs = 1;
}
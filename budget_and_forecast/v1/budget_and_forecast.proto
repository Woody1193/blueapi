syntax = "proto3";

package blueapi.budget_and_forecast.v1;

import "api/aws/budget.proto";
import "api/aws/forecast.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/budget_and_forecast";
option java_package = "cloud.alphaus.api.budget_and_forecast";
option java_outer_classname = "BudgetAndForecastProto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Alphaus Blue: Budget And Forecast Service";
      version: "1.0";
      contact: {
        name: "Alphaus Blue: Budget And Forecast Service";
        url: "https://alphauslabs.github.io/blueapi/apis/budget-and-forecast.html";
      };
      license: {
        name: "License: Apache License 2.0";
        url: "https://github.com/alphauslabs/blueapi/blob/main/LICENSE";
      };
    };
    external_docs: {
      url: "https://alphauslabs.github.io/blueapi/apis/budget-and-forecast.html";
      description: "More about Alphaus Blue: Budget And Forecast Service";
    }
};

// Service use to create, update, view Budget and view Usage Cost Forecast 
service BudgetAndForecast {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
		  description: "Base URL: https://api.alphaus.cloud/m/blue/budget-and-forecast"
		  external_docs: {
			  url: "https://github.com/alphauslabs/blueapi/tree/main/budget-and-forecast/";
			  description: "Service definition";
		  }
	  };

    // Saves Budget Configuration to database
    rpc SetBudgetConfiguration(BudgetConfigRequest) returns (ResultResponse) {
      option (google.api.http) = {
        post: "/v1/{vendor}/budget/configuration"
        body: "budget_config"
      };
    }

    // Updates Budget Configuration in database
    rpc UpdateBudgetConfiguration(BudgetConfigRequest) returns (ResultResponse) {
      option (google.api.http) = {
        put: "/v1/{vendor}/budget/configuration/{budget_config.id}"
        body: "budget_config"
      };
    }

    // Fetches Budget Configurations for all accounts under the specified Billing Group 
    rpc GetBudgetConfigurationBG(GetBudgetConfigRequest) returns (BudgetConfigResponse) {
      option (google.api.http) = {
        get: "/v1/{vendor}/budget/configuration/{company_id}"
      };
    }

    // Fetches Budget Configuration for the specified account id
    rpc GetBudgetConfigurationAccount(GetBudgetConfigRequest) returns (BudgetConfigResponse) {
      option (google.api.http) = {
        get: "/v1/{vendor}/budget/configuration/{company_id}/{account_id}"
      };
    }

    // Fetches Cost Forecasts for the specified Billing Group
    rpc GetForecasts(GetForecastsRequest) returns (GetForecastsResponse) {
      option (google.api.http) = {
        get: "/v1/{vendor}/forecasts/{company_id}"
      };
    }

    // Fetches Month-to-Date Costs for the specified Billing Group
    rpc GetMonthToDate(GetMonthToDateRequest) returns (GetMonthToDateResponse) {
      option (google.api.http) = {
        get: "/v1/{vendor}/forecasts/month-to-date/{company_id}"
      };
    }
}

// Request message for SetBudgetConfiguration and UpdateBudgetConfiguration.
message BudgetConfigRequest {
  string vendor = 1;
  api.aws.BudgetConfiguration budget_config = 2 [json_name = "budget_config"];
}

// Request message for GetBudgetConfigurationBG and GetBudgetConfigurationAccount.
message GetBudgetConfigRequest {
  string vendor = 1;
  string company_id = 2 [json_name = "company_id"];
  string account_id = 3 [json_name = "account_id"];
}

// Response message for GetBudgetConfigurationBG and GetBudgetConfigurationAccount.
// If account id is specified in the request, only one Budget Configuration is returned.
message BudgetConfigResponse {
  repeated api.aws.BudgetConfiguration data = 1;
}

// Response message for SetBudgetConfiguration and UpdateBudgetConfiguration.
message ResultResponse {
  string code = 1;
  string description = 2;
  string message = 3;
}

// Request message for GetForecasts per Billing Group
// @Param company_id
// @Param frequency {daily, monthly}
// @Param level {account, category, product}
// @Param from_date {YYYY-MM-DD}
// @Param to_date {YYYY-MM-DD}
message GetForecastsRequest {
  string vendor = 1;  
  string company_id = 2 [json_name = "company_id"];
  string frequency = 3;
  string level = 4;
  string from_date = 5 [json_name = "from_date"]; 
  string to_date = 6 [json_name = "to_date"];
}

// Response message for GetForecasts per Billing Group
message GetForecastsResponse {
  api.aws.BillingGroupForecast data = 1;
}

// Request message for GetMonthToDate per Billing Group
// @Param company_id
message GetMonthToDateRequest {
  string vendor = 1;
  string company_id = 2 [json_name = "company_id"];
}

// Response message for GetMonthToDate per Billing Group
message GetMonthToDateResponse {
  api.aws.BillingGroupMonthToDate data = 1;
}
syntax = "proto3";

package blueapi.kvstore.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/alphauslabs/blueapi/kvstore";
option java_package = "cloud.alphaus.api.kvstore";
option java_outer_classname = "KvStoreProto";

// KvStore service definition.
service KvStore {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "(BETA) KvStore API. Base URL: https://api.alphaus.cloud/m/blue/kv"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/kvstore/";
      description: "Service definition";
    }
  };

  // Scans key:value data from your store.
  rpc Scan(ScanRequest) returns (stream KeyValue) {
    option (google.api.http) = {
      get: "/v1/keys"
    };
  }

  // Reads a key:value data from your store.
  rpc Read(ReadRequest) returns (KeyValue) {
    option (google.api.http) = {
      get: "/v1/keys/{key}"
    };
  }

  // Writes a new (or update an existing) key:value data in your store.
  rpc Write(KeyValue) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1"
      body: "*"
    };
  }

  // Deletes a key:value data from your store.
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/keys/{key}"
    };
  }
}

message KeyValue {
  string key = 1;
  string value = 2;
}

// Request message for the KvStore.Scan rpc.
message ScanRequest {
  // Optional. If non-empty, translates to SQL's `LIKE` operand.
  // Return all keys by default.
  string like = 1;
}

// Request message for the KvStore.Read rpc.
message ReadRequest {
  // Required. The key to read.
  string key = 1;
}

// Request message for the KvStore.Delete rpc.
message DeleteRequest {
  // Required. The key to delete. To delete all keys, set this to `-` (hyphen).
  // You can also prefix this with `like:` which translates to SQL's LIKE operator.
  // For example, `like:%pattern%`.
  string key = 1;
}

syntax = "proto3";

package blueapi.cost.v1;

import "api/aws/cost.proto";
import "api/aws/adjustment.proto";
import "api/aws/account.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alphauslabs/blueapi/cost";
option java_package = "cloud.alphaus.api.cost";
option java_outer_classname = "CostProto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Alphaus Blue: Cost Service";
    version: "1.0";
    contact: {
      name: "Alphaus Blue: Cost Service";
      url: "https://alphauslabs.github.io/blueapi/apis/cost.html";
    };
    license: {
      name: "License: Apache License 2.0";
      url: "https://github.com/alphauslabs/blueapi/blob/main/LICENSE";
    };
  };
  external_docs: {
    url: "https://alphauslabs.github.io/blueapi/apis/cost.html";
    description: "More about Alphaus Blue: Cost Service";
  }
};

// Service for reading aggregated costs for your cloud costs and usages.
service Cost {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    description: "Base URL: https://api.alphaus.cloud/m/blue/cost"
    external_docs: {
      url: "https://github.com/alphauslabs/blueapi/tree/main/cost/";
      description: "Service definition";
    }
  };

  // Lists AWS management accounts.
  rpc ListManagementAccounts(ListManagementAccountsRequest) returns (ListManagementAccountsResponse) {
    option (google.api.http) = {
      get: "/v1/aws/managementaccts"
    };
  }

  // Gets an AWS management account. This call includes all of the account's metadata.
  // See https://alphauslabs.github.io/blueapi/ for the list of supported attributes.
  rpc GetManagementAccount(GetManagementAccountRequest) returns (api.aws.Account) {
    option (google.api.http) = {
      get: "/v1/aws/managementaccts/{id}"
    };
  }

  // Registers an AWS management account. See https://docs.aws.amazon.com/cur/latest/userguide/cur-create.html
  // for more information. Requirements include: Additional report details = 'Include Resource IDS' enabled,
  // Prefix = non-empty (recommendation only), Time granularity = 'Hourly', File format = 'text/csv'.
  rpc CreateManagementAccount(CreateManagementAccountRequest) returns (api.aws.Account) {
    option (google.api.http) = {
      post: "/v1/aws/managementaccts"
      body: "*"
    };
  }

  // Deletes an AWS management account.
  rpc DeleteManagementAccount(DeleteManagementAccountRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/aws/managementaccts/{id}"
    };
  }

  // Reads the usage-based cost details of an organization (Ripple) or company (Wave).
  // At the moment, the supported {vendor} is 'aws'. If datetime range parameters are
  // not set, month-to-date (current month) will be returned. Date range parameters
  // are 'start_time' and 'end_time, with the 'yyyymmdd' format.
  rpc ReadCosts (ReadCostsRequest) returns (stream CostItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/costs:read"
    };
  }

  // Reads the usage-based cost details of a billing group. At the moment, the supported
  // {vendor} is 'aws'. If datetime range parameters are not set, month-to-date
  // (current month) will be returned.
  rpc ReadBillingGroupCosts (ReadBillingGroupCostsRequest) returns (stream CostItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/billinggroups/{name}/costs:read"
    };
  }

  // Reads the usage-based cost details of an account. At the moment, the supported
  // {vendor} is 'aws'. If datetime range parameters are not set, month-to-date
  // (current month) will be returned.
  rpc ReadAccountCosts (ReadAccountCostsRequest) returns (stream CostItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/accounts/{name}/costs:read"
    };
  }

  // Reads the non-usage-based details of an organization (Ripple) or company (Wave).
  // This API covers non-usage-based adjustments, such as Fees, Credits, Discounts, Tax,
  // Upfront Fees, etc. At the moment, the supported {vendor} is 'aws'. If datetime
  // range parameters are not set, month-to-date (current month) will be returned.
  rpc ReadAdjustments (ReadAdjustmentsRequest) returns (stream AdjustmentItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/adjustments:read"
    };
  }

  // Reads the non-usage-based details of a billing group. This API covers non-usage-based
  // adjustments, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. At the moment,
  // the supported {vendor} is 'aws'. If datetime range parameters are not set, month-to-date
  // (current month) will be returned.
  rpc ReadBillingGroupAdjustments (ReadBillingGroupAdjustmentsRequest) returns (stream AdjustmentItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/billinggroups/{name}/adjustments:read"
    };
  }

  // Reads the non-usaged-based details of an AWS account. This API covers non-usage-based
  // adjustments, such as Fees, Credits, Discounts, Tax, Upfront Fees, etc. At the moment,
  // the supported {vendor} is 'aws'. If datetime range parameters are not set, month-to-date
  // (current month) will be returned.
  rpc ReadAccountAdjustments (ReadAccountAdjustmentsRequest) returns (stream AdjustmentItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/accounts/{name}/adjustments:read"
    };
  }

  // Reads the usage-based tag costs of a billing group. At the moment, the supported {vendor} is 
  // 'aws'. If datetime range parameters are not set, month-to-date (current month) will be returned.
  rpc ReadBillingGroupTagCosts (ReadBillingGroupTagCostsRequest) returns (stream CostItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/billinggroups/{name}/tagcosts:read"
    };
  }

  // Reads the usage-based tag costs of an AWS account. At the moment, the supported {vendor} is 
  // 'aws'. If datetime range parameters are not set, month-to-date (current month) will be returned.
  rpc ReadAccountTagCosts (ReadAccountTagCostsRequest) returns (stream CostItem) {
    option (google.api.http) = {
      post: "/v1/{vendor}/accounts/{name}/tagcosts:read"
    };
  }
}

// Response message wrapper for cloud costs.
message CostItem {
  api.aws.Cost aws = 1;
}

// AWS-specific options.
message AwsOptions {
  // Optional. If set to true, stream will include resource tags. Note that this could
  // potentially increase the data size if you have lots of tag information.
  bool include_tags = 1 [json_name = "include_tags"];

  // Optional. If set to true, stream will include resource cost category information.
  // Note that this could potentially increase the data size if you have lots of cost
  // category information.
  bool include_cost_categories = 2 [json_name = "include_cost_categories"];
}

// Request message for Cost.ListManagementAccounts rpc.
message ListManagementAccountsRequest {}

// Response message for Organization.ListManagementAccounts rpc.
message ListManagementAccountsResponse {
  repeated api.aws.Account accounts = 1;
}

// Request message for Cost.GetManagementAccount rpc.
message GetManagementAccountRequest {
  // Required. The id of the account to get.
  string id = 1;
}

// Request message for Cost.CreateManagementAccount rpc.
message CreateManagementAccountRequest {
  // Required. The id of the management account.
  string id = 1;

  // Optional. The name, or description of the management account.
  // This is set to 'id' when not specified.
  string name = 2;

  // Required. S3 Bucket name.
  string bucket_name = 3 [json_name = "bucket_name"];

  // Optional. Prefix.
  string prefix = 4;

  // Required. Report name.
  string report_name = 5 [json_name = "report_name"];

  // Required. Role ARN.
  string role_arn = 6 [json_name = "role_arn"];
}

// Request message for Cost.DeleteManagementAccount rpc.
message DeleteManagementAccountRequest {
  // Required. The id of the management account.
  string id = 1;
}

// Request message for Cost.ReadCosts.
message ReadCostsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 2 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmd.
  string end_time = 3 [json_name = "end_time"];

  // Optional. AWS-specific request options.
  AwsOptions aws_options = 4 [json_name = "aws_options"];
}

// Request message for Cost.ReadBillingGroupCosts.
message ReadBillingGroupCostsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Required. The billing group id to stream.
  string name = 2;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmd.
  string start_time = 3 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 4 [json_name = "end_time"];

  // Optional. AWS-specific request options.
  AwsOptions aws_options = 5 [json_name = "aws_options"];
}

// Request message for Cost.ReadAccountCosts.
message ReadAccountCostsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Required. The account to stream.
  string name = 2;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 3 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 4 [json_name = "end_time"];

  // Optional. AWS-specific request options.
  AwsOptions aws_options = 5 [json_name = "aws_options"];
}

// Response message wrapper for cloud cost adjustments.
message AdjustmentItem {
  api.aws.Adjustment aws = 1;
}

// Request message for Cost.ReadAdjustments.
message ReadAdjustmentsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 2 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 3 [json_name = "end_time"];
}

// Request message for Cost.ReadBillingGroupAdjustments.
message ReadBillingGroupAdjustmentsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Required. The billing group id to stream.
  string name = 2;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 3 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 4 [json_name = "end_time"];
}

// Request message for Cost.ReadAccountAdjustments.
message ReadAccountAdjustmentsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Required. The AWS account id to stream.
  string name = 2;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 3 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 4 [json_name = "end_time"];
}

// Request message for Cost.ReadBillingGroupTagCosts.
message ReadBillingGroupTagCostsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Required. The billing group id to stream.
  string name = 2;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 3 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 4 [json_name = "end_time"];
}

// Request message for Cost.ReadAccountTagCosts.
message ReadAccountTagCostsRequest {
  // Required. Valid values are 'aws', 'azure', and 'gcp'.
  string vendor = 1;

  // Required. The AWS account id to stream.
  string name = 2;

  // Optional. Timestamp to start streaming data from. If not set, the first day of the
  // current month will be used. Format: yyyymmdd.
  string start_time = 3 [json_name = "start_time"];

  // Optional. Timestamp to end the streaming data. If not set, current date will be used.
  // Format: yyyymmdd.
  string end_time = 4 [json_name = "end_time"];
}
